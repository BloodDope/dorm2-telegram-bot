from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from loguru import logger
from datetime import datetime

from config.content import (
    WELCOME_MESSAGE, OFFICIAL_CHANNEL_TEXT, STUDENT_COUNCIL_TEXT,
    FLOOR_CHATS_TEXT, GENERAL_CHAT_TEXT, GUIDE_WEBSITE_TEXT,
    VIDEO_GUIDE_TEXT, CONTACTS_TEXT, ADMIN_CONTACTS, EMERGENCY_CONTACTS,
    TECHNICAL_CONTACTS, COUNCIL_CONTACTS, VIDEO_CATEGORIES,
    FEEDBACK_START, FEEDBACK_RECEIVED
)
from config.settings import get_settings
from keyboards.inline_keyboards import (
    get_main_menu_keyboard, get_back_to_main_keyboard, get_back_keyboard,
    get_student_council_keyboard, get_floor_chats_keyboard,
    get_video_categories_keyboard, get_contacts_keyboard,
    get_feedback_type_keyboard
)
from database.database import (
    update_user_activity, log_section_access, db
)

router = Router()

@router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        await update_user_activity(callback.from_user.id)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_first_name = callback.from_user.first_name or "–¥—Ä—É–≥"
        welcome_text = WELCOME_MESSAGE.format(first_name=user_first_name)
        
        await callback.message.edit_text(
            welcome_text,
            reply_markup=get_main_menu_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ main_menu_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "official_channel")
async def official_channel_callback(callback: CallbackQuery):
    """–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –æ–±—â–µ–∂–∏—Ç–∏—è"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "official_channel")
        
        settings = get_settings()
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        channel_link = await db.get_setting("official_channel_link") or settings.official_channel_link
        
        text = OFFICIAL_CHANNEL_TEXT.format(
            channel_link=channel_link or "–°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–¥–Ω–µ–µ"
        )
        
        await callback.message.edit_text(
            text,
            reply_markup=get_back_to_main_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ official_channel_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "student_council")
async def student_council_callback(callback: CallbackQuery):
    """–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "student_council")
        
        await callback.message.edit_text(
            STUDENT_COUNCIL_TEXT,
            reply_markup=get_student_council_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ student_council_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "floor_chats")
async def floor_chats_callback(callback: CallbackQuery):
    """–ß–∞—Ç—ã —ç—Ç–∞–∂–µ–π"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "floor_chats")
        
        await callback.message.edit_text(
            FLOOR_CHATS_TEXT,
            reply_markup=get_floor_chats_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ floor_chats_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")



@router.callback_query(F.data == "general_chat")
async def general_chat_callback(callback: CallbackQuery):
    """–û–±—â–∏–π —á–∞—Ç –æ–±—â–µ–∂–∏—Ç–∏—è"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "general_chat")
        
        text = GENERAL_CHAT_TEXT
        
        await callback.message.edit_text(
            text,
            reply_markup=get_back_to_main_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ general_chat_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "guide_website")
async def guide_website_callback(callback: CallbackQuery):
    """–°–∞–π—Ç —Å –≥–∞–π–¥–æ–º"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "guide_website")
        
        settings = get_settings()
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        guide_website_link = await db.get_setting("guide_website_link") or settings.guide_website_link
        
        text = GUIDE_WEBSITE_TEXT.format(
            guide_website_link=guide_website_link or "–°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–¥–Ω–µ–µ"
        )
        
        await callback.message.edit_text(
            text,
            reply_markup=get_back_to_main_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ guide_website_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "video_guide")
async def video_guide_callback(callback: CallbackQuery):
    """–í–∏–¥–µ–æ-–≥–∞–π–¥—ã"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "video_guide")
        
        await callback.message.edit_text(
            VIDEO_GUIDE_TEXT,
            reply_markup=get_video_categories_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ video_guide_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data.startswith("video_category_"))
async def video_category_callback(callback: CallbackQuery):
    """–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤–∏–¥–µ–æ"""
    try:
        await update_user_activity(callback.from_user.id)
        
        category_id = callback.data.split("video_category_")[1]
        category_info = VIDEO_CATEGORIES.get(category_id)
        
        if not category_info:
            await callback.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        videos = await db.get_videos_by_category(category_id)
        
        if videos:
            text = f"""
üé¨ <b>{category_info['name']}</b>

{category_info['description']}

–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {len(videos)}
"""
            
            await callback.message.edit_text(text, reply_markup=get_back_keyboard("video_guide"))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
            for video in videos[:5]:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 –≤–∏–¥–µ–æ –∑–∞ —Ä–∞–∑
                try:
                    await callback.message.answer_video(
                        video=video["file_id"],
                        caption=f"üìπ <b>{video['title']}</b>\n\n{video['description']}"
                    )
                except Exception as video_error:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ {video['id']}: {video_error}")
        else:
            text = f"""
üé¨ <b>{category_info['name']}</b>

{category_info['description']}

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–¥–µ–æ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.
–û–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!
"""
            await callback.message.edit_text(
                text,
                reply_markup=get_back_keyboard("video_guide")
            )
        
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ video_category_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "contacts")
async def contacts_callback(callback: CallbackQuery):
    """–í–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    try:
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "contacts")
        
        await callback.message.edit_text(
            CONTACTS_TEXT,
            reply_markup=get_back_to_main_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ contacts_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "contacts_admin")
async def contacts_admin_callback(callback: CallbackQuery):
    """–ö–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    try:
        await update_user_activity(callback.from_user.id)
        
        await callback.message.edit_text(
            ADMIN_CONTACTS,
            reply_markup=get_back_keyboard("contacts")
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ contacts_admin_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "contacts_emergency")
async def contacts_emergency_callback(callback: CallbackQuery):
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    try:
        await update_user_activity(callback.from_user.id)
        
        await callback.message.edit_text(
            EMERGENCY_CONTACTS,
            reply_markup=get_back_keyboard("contacts")
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ contacts_emergency_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "contacts_technical")
async def contacts_technical_callback(callback: CallbackQuery):
    """–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    try:
        await update_user_activity(callback.from_user.id)
        
        await callback.message.edit_text(
            TECHNICAL_CONTACTS,
            reply_markup=get_back_keyboard("contacts")
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ contacts_technical_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "contacts_council")
async def contacts_council_callback(callback: CallbackQuery):
    """–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞"""
    try:
        await update_user_activity(callback.from_user.id)
        
        await callback.message.edit_text(
            COUNCIL_CONTACTS,
            reply_markup=get_back_keyboard("contacts")
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ contacts_council_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

@router.callback_query(F.data == "feedback")
async def feedback_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"""
    try:
        # –õ–µ–Ω–∏–≤—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from handlers.feedback_handlers import FeedbackStates
        
        await update_user_activity(callback.from_user.id)
        await log_section_access(callback.from_user.id, "feedback")
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ
        await state.clear()
        await state.update_data(feedback_type="general")
        await state.set_state(FeedbackStates.waiting_for_message)
        
        feedback_text = """
<b>üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b>

–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.

–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
"""
        
        await callback.message.edit_text(
            feedback_text,
            reply_markup=get_back_to_main_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ feedback_callback: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")



def register_callback_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback'–æ–≤"""
    dp.include_router(router) 